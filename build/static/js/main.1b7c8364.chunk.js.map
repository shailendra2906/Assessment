{"version":3,"sources":["images/profile.jpg","utils/constants.js","images/img1.jpg","images/img2.JPG","utils/elevationScroll.js","components/header.jsx","components/tabs.jsx","components/comments.jsx","components/writeComment.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","BASE_URL","GET_COMMENTS_DATA","GET_HOME_PAGE_DATA","API_CONFIG","headers","withCredentials","auth","username","password","ElevationScroll","props","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","elevation","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","toolbar","backgroundColor","minHeight","alignItems","paddingTop","paddingBottom","title","fontSize","iconRoot","color","AppHeader","classes","className","AppBar","Toolbar","IconButton","size","aria-label","Avatar","alt","src","profilePic","Typography","variant","AppTabs","useState","value","setValue","Tabs","onChange","event","newValue","indicatorColor","textColor","Tab","label","Comments","userComments","setUserComments","useEffect","axios","post","constants","then","result","data","catch","err","console","log","length","map","comment","key","id","ListItemAvatar","profile","likes","days","WriteComments","user1","type","placeholder","App","homePageData","setHomePageData","style","image1","height","width","para1","quotesData","body","author","para2","header","para3","image2","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,qC,iBCA3CD,EAAOC,QAAU,CACfC,SAAU,wBACVC,kBAAmB,kBACnBC,mBAAoB,QACpBC,WAAY,CACVC,QAAS,CACP,eAAgB,oBAElBC,iBAAiB,EACjBC,KAAM,CACJC,SAAU,WACVC,SAAU,mB,mBCXhBV,EAAOC,QAAU,IAA0B,kC,wCCA3CD,EAAOC,QAAU,IAA0B,kC,gTCI5B,SAASU,EAAgBC,GAAQ,IACpCC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,OAIZC,EAAUC,YAAiB,CAC/BC,mBAAmB,EACnBC,UAAW,EACXC,OAAQL,EAASA,SAAWM,IAG9B,OAAOC,IAAMC,aAAaT,EAAU,CAClCU,UAAWR,EAAU,EAAI,I,kGCCzBS,G,MAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,QAAS,CACPC,gBAAiB,UACjBC,UAAW,GACXC,WAAY,aACZC,WAAYV,EAAMK,QAAQ,GAC1BM,cAAeX,EAAMK,QAAQ,IAE/BO,MAAO,CACLV,SAAU,EACVW,SAAU,QAEZC,SAAU,CACRD,SAAU,SACVE,MAAO,UACP,UAAW,CACTA,MAAO,cAKE,SAASC,EAAU9B,GAChC,IAAM+B,EAAUnB,IAEhB,OACE,yBAAKoB,UAAWD,EAAQhB,MACtB,kBAAChB,EAAoBC,EACnB,kBAACiC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASF,UAAWD,EAAQX,SAC1B,yBAAKY,UAAU,qBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAeA,UAAU,iBACzB,kBAACG,EAAA,EAAD,CAAYH,UAAWD,EAAQH,SAAUQ,KAAK,SAA9C,aAIF,yBAAKJ,UAAU,iBACb,kBAAC,IAAD,CAAcA,UAAU,iBACxB,kBAACG,EAAA,EAAD,CAAYH,UAAWD,EAAQH,SAAUQ,KAAK,SAA9C,cAIF,yBAAKJ,UAAU,iBACb,kBAAC,IAAD,CAAcA,UAAU,iBACxB,kBAACG,EAAA,EAAD,CAAYH,UAAWD,EAAQH,SAAUQ,KAAK,SAA9C,aAIF,yBAAKJ,UAAU,iBACb,kBAAC,IAAD,CAAaA,UAAU,iBACvB,kBAACG,EAAA,EAAD,CAAYH,UAAWD,EAAQH,SAAUQ,KAAK,SAA9C,YAKJ,yBAAKJ,UAAU,mBACb,kBAACG,EAAA,EAAD,CAAYE,aAAW,UACrB,kBAAC,IAAD,OAEF,6BACE,kBAACC,EAAA,EAAD,CAAQC,IAAI,gBAAgBC,IAAKC,OAEnC,yBAAKT,UAAU,gBACb,kBAACU,EAAA,EAAD,CAAYV,UAAWD,EAAQL,MAAOiB,QAAQ,MAA9C,wB,sBC/EZ/B,G,MAAYC,YAAW,CAC3BE,KAAM,CACJC,SAAU,MAIC,SAAS4B,IACNhC,IAAhB,IADgC,EAENH,IAAMoC,SAAS,GAFT,mBAEzBC,EAFyB,KAElBC,EAFkB,KAQhC,OACE,yBAAKf,UAAU,iBACb,yBAAKA,UAAU,YACb,kBAACgB,EAAA,EAAD,CACEF,MAAOA,EACPG,SATa,SAACC,EAAOC,GAC3BJ,EAASI,IASHC,eAAe,UACfC,UAAU,WAEV,kBAACC,EAAA,EAAD,CAAKC,MAAM,WAAWvB,UAAU,aAChC,kBAACsB,EAAA,EAAD,CAAKC,MAAM,UAAUvB,UAAU,aAC/B,kBAACsB,EAAA,EAAD,CAAKC,MAAM,UAAUvB,UAAU,aAC/B,kBAACsB,EAAA,EAAD,CAAKC,MAAM,SAASvB,UAAU,aAC9B,kBAACsB,EAAA,EAAD,CAAKC,MAAM,UAAUvB,UAAU,aAC/B,kBAACsB,EAAA,EAAD,CAAKC,MAAM,SAASvB,UAAU,aAC9B,kBAACsB,EAAA,EAAD,CAAKC,MAAM,UAAUvB,UAAU,aAC/B,kBAACsB,EAAA,EAAD,CAAKC,MAAM,QAAQvB,UAAU,aAC7B,kBAACsB,EAAA,EAAD,CAAKC,MAAM,SAASvB,UAAU,eAGlC,yBAAKA,UAAU,cACb,0BAAMA,UAAU,cAEhB,4BAAQA,UAAU,kBAAlB,a,uFCnCO,SAASwB,EAASxD,GAAQ,IAAD,EACE6C,mBAAS,IADX,mBAC/BY,EAD+B,KACjBC,EADiB,KAEtCC,qBAAU,WASR,OARAC,IACGC,KAAKC,IAAUxE,SAAWwE,IAAUvE,mBACpCwE,MAAK,SAACC,GACLN,EAAgBM,EAAOC,SAExBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAET,WACLC,QAAQC,IAAI,gBAEb,IA2CH,OADAD,QAAQC,IAAIZ,GAEV,yBAAKzB,UAAU,sBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,iBAAf,gBAEF,yBAAKA,UAAU,oBACb,4BAAQA,UAAU,kBAAlB,QACA,4BAAQA,UAAU,kBAAlB,UACA,4BAAQA,UAAU,kBAAlB,YA/CJyB,EAAaa,OAAS,GACtBb,EAAac,KAAI,SAACC,GAChB,OACE,yBAAKxC,UAAU,gBAAgByC,IAAKD,EAAQE,IAC1C,yBAAK1C,UAAU,gBACb,kBAAC2C,EAAA,EAAD,KACE,kBAACrC,EAAA,EAAD,CAAQC,IAAI,aAAaC,IAAKoC,OAEhC,yBAAK5C,UAAU,WACb,yBAAKA,UAAU,kBAAkBwC,EAAQ3E,UACzC,yBAAKmC,UAAU,mBAAmBwC,EAAQA,SAC1C,yBAAKxC,UAAU,mBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,cAAcwC,EAAQK,QAEvC,yBAAK7C,UAAU,sBACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,YACI,GAAhBwC,EAAQM,KAAR,sBAEMN,EAAQM,KAFd,uB,mEC7CR,SAASC,EAAc/E,GACpC,OACE,yBAAKgC,UAAU,4BACb,yBAAKA,UAAU,wBACb,kBAAC2C,EAAA,EAAD,KACE,kBAACrC,EAAA,EAAD,CAAQC,IAAI,cAAcC,IAAKwC,QAGnC,yBAAKhD,UAAU,sBACb,2BAAOiD,KAAK,OAAOC,YAAY,wBAEjC,yBAAKlD,UAAU,4BACb,4CC4DOmD,MAlEf,WAAgB,IAAD,EAC2BtC,mBAAS,IADpC,mBACNuC,EADM,KACQC,EADR,KAYb,OAVA1B,qBAAU,WACRC,IACGC,KAAKC,IAAUxE,SAAWwE,IAAUtE,oBACpCuE,MAAK,SAACC,GACLqB,EAAgBrB,EAAOC,SAExBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAED,yBAAKnC,UAAU,OACb,kBAACF,EAAD,MACA,yBAAKwD,MAAO,CAAEhE,UAAW,UACzB,kBAACsB,EAAD,MACA,yBAAKZ,UAAU,UACb,yBAAKQ,IAAK+C,IAAQD,MAAO,CAAEE,OAAQ,QAASC,MAAO,WAErD,yBAAKzD,UAAU,aAAaoD,EAAaM,OACzC,yBAAK1D,UAAU,mBACb,yBAAKA,UAAU,gBACb,yBAAKQ,IAAK+C,IAAQD,MAAO,CAAEG,MAAO,OAAOD,OAAO,WAElD,yBAAKxD,UAAU,8BACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAiBL,SAAS,WAE3ByD,GACCA,EAAaO,YACbP,EAAaO,WAAWC,KAC1B,yBAAK5D,UAAU,eAAf,IAEGoD,GACCA,EAAaO,YACbP,EAAaO,WAAWE,WAKlC,yBAAK7D,UAAU,mBACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,2BACb,2BACGoD,GAAgBA,EAAaU,OAASV,EAAaU,MAAMC,QAE5D,6BACCX,GAAgBA,EAAaU,OAASV,EAAaU,MAAMF,OAG9D,yBAAK5D,UAAU,iBACb,yBAAKQ,IAAK+C,IAAQD,MAAO,CAAEG,MAAO,OAASD,OAAO,YAGtD,yBAAKxD,UAAU,aAAaoD,EAAaY,OACzC,yBAAKhE,UAAU,SACb,yBAAKQ,IAAKyD,IAAQX,MAAO,CAAEE,OAAQ,QAASC,MAAO,WAErD,kBAACjC,EAAD,MACA,kBAACuB,EAAD,QC9DcmB,QACW,cAA7BhG,OAAOiG,SAASC,UAEe,UAA7BlG,OAAOiG,SAASC,UAEhBlG,OAAOiG,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9C,MAAK,SAAA+C,GACJA,EAAaC,gBAEd7C,OAAM,SAAA8C,GACL5C,QAAQ4C,MAAMA,EAAMC,c","file":"static/js/main.1b7c8364.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.194196c3.jpg\";","module.exports = {\r\n  BASE_URL: \"http://localhost:3001\",\r\n  GET_COMMENTS_DATA: \"/users/comments\",\r\n  GET_HOME_PAGE_DATA: \"/home\",\r\n  API_CONFIG: {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    withCredentials: true,\r\n    auth: {\r\n      username: \"user@123\",\r\n      password: \"password@123\",\r\n    },\r\n  },\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/img1.0902a858.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img2.19d5a2fa.JPG\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\n\r\nexport default function ElevationScroll(props) {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n      disableHysteresis: true,\r\n      threshold: 0,\r\n      target: window ? window() : undefined,\r\n    });\r\n  \r\n    return React.cloneElement(children, {\r\n      elevation: trigger ? 4 : 0,\r\n    });\r\n  }\r\n  \r\n  ElevationScroll.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n  };","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ElevationScroll from \"../utils/elevationScroll\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport PieChartIcon from \"@material-ui/icons/PieChart\";\r\nimport WidgetsIcon from \"@material-ui/icons/Widgets\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport profilePic from \"../images/profile.jpg\";\r\nimport \"../styles/header.scss\";\r\nimport { useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  toolbar: {\r\n    backgroundColor: \"#6648cd\",\r\n    minHeight: 50,\r\n    alignItems: \"flex-start\",\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    fontSize: \"1rem\",\r\n  },\r\n  iconRoot: {\r\n    fontSize: \"0.8rem\",\r\n    color: \"#d1c8f0\",\r\n    \"&:hover\": {\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AppHeader(props) {\r\n  const classes = useStyles();\r\n  /* const [activeAppBarLink,setActiveAppBarLink] = useState */\r\n  return (\r\n    <div className={classes.root}>\r\n      <ElevationScroll {...props}>\r\n        <AppBar>\r\n          <Toolbar className={classes.toolbar}>\r\n            <div className=\"app-bar-container\">\r\n              <div className=\"app-bar-menu\">\r\n                <div className=\"app-bar-items\">\r\n                  <DashboardIcon className=\"app-bar-icon\"></DashboardIcon>\r\n                  <IconButton className={classes.iconRoot} size=\"small\">\r\n                    CHANNELS\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"app-bar-items\">\r\n                  <BookmarkIcon className=\"app-bar-icon\"></BookmarkIcon>\r\n                  <IconButton className={classes.iconRoot} size=\"small\">\r\n                    BOOKMARKS\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"app-bar-items\">\r\n                  <PieChartIcon className=\"app-bar-icon\"></PieChartIcon>\r\n                  <IconButton className={classes.iconRoot} size=\"small\">\r\n                    OVERVIEW\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"app-bar-items\">\r\n                  <WidgetsIcon className=\"app-bar-icon\"></WidgetsIcon>\r\n                  <IconButton className={classes.iconRoot} size=\"small\">\r\n                    WIDGET\r\n                  </IconButton>\r\n                </div>\r\n              </div>\r\n              <div className=\"app-bar-profile\">\r\n                <IconButton aria-label=\"search\">\r\n                  <SearchIcon />\r\n                </IconButton>\r\n                <div>\r\n                  <Avatar alt=\"Travis Howard\" src={profilePic} />\r\n                </div>\r\n                <div className=\"profile-name\">\r\n                  <Typography className={classes.title} variant=\"h7\">\r\n                    Lea Schneider\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport \"../styles/tabs.scss\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function AppTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tab-container\">\r\n      <div className=\"tab-menu\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab label=\"Trending\" className=\"tab-item\" />\r\n          <Tab label=\"For You\" className=\"tab-item\" />\r\n          <Tab label=\"Cooking\" className=\"tab-item\" />\r\n          <Tab label=\"Nature\" className=\"tab-item\" />\r\n          <Tab label=\"Science\" className=\"tab-item\" />\r\n          <Tab label=\"Travel\" className=\"tab-item\" />\r\n          <Tab label=\"Climate\" className=\"tab-item\" />\r\n          <Tab label=\"Music\" className=\"tab-item\" />\r\n          <Tab label=\"People\" className=\"tab-item\" />\r\n        </Tabs>\r\n      </div>\r\n      <div className=\"tab-button\">\r\n        <span className=\"delimeter\"></span>\r\n        {/* <Divider orientation=\"vertical\" flexItem /> */}\r\n        <button className=\"explore-button\">Explore</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/comments.scss\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport profile from \"../images/profile.jpg\";\r\nimport axios from \"axios\";\r\nimport constants from \"../utils/constants\";\r\n\r\nexport default function Comments(props) {\r\n  const [userComments, setUserComments] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .post(constants.BASE_URL + constants.GET_COMMENTS_DATA)\r\n      .then((result) => {\r\n        setUserComments(result.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    return () => {\r\n      console.log(\"unmounted\");\r\n    };\r\n  }, []);\r\n\r\n  //Method responsible for rendering the Comments Cards...\r\n  const renderComments = () => {\r\n    return (\r\n      userComments.length > 0 &&\r\n      userComments.map((comment) => {\r\n        return (\r\n          <div className=\"comments-body\" key={comment.id}>\r\n            <div className=\"comment-card\">\r\n              <ListItemAvatar>\r\n                <Avatar alt=\"Remy Sharp\" src={profile} />\r\n              </ListItemAvatar>\r\n              <div className=\"comment\">\r\n                <div className=\"comment-author\">{comment.username}</div>\r\n                <div className=\"comment-subject\">{comment.comment}</div>\r\n                <div className=\"comment-details\">\r\n                  <div className=\"like-container\">\r\n                    <div className=\"like-icon\">\r\n                      <FavoriteBorderIcon />\r\n                    </div>\r\n                    <div className=\"like-count\">{comment.likes}</div>\r\n                  </div>\r\n                  <div className=\"duration-container\">\r\n                    <div className=\"duration-icon\">\r\n                      <CalendarTodayIcon />\r\n                    </div>\r\n                    <div className=\"duration\">\r\n                      {comment.days == 1\r\n                        ? `yesterday`\r\n                        : `${comment.days} days ago`}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  console.log(userComments);\r\n  return (\r\n    <div className=\"comments-container\">\r\n      <div className=\"comments-header\">\r\n        <div className=\"comment-counter\">\r\n          <div className=\"counter-value\">23 COMMENTS</div>\r\n        </div>\r\n        <div className=\"comments-buttons\">\r\n          <button className=\"comment-button\">Best</button>\r\n          <button className=\"comment-button\">Newest</button>\r\n          <button className=\"comment-button\">Oldest</button>\r\n        </div>\r\n      </div>\r\n      {renderComments()}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../styles/comments.scss\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport user1 from \"../images/profile.jpg\";\r\nimport \"../styles/writeComments.scss\";\r\n\r\nexport default function WriteComments(props) {\r\n  return (\r\n    <div className=\"write-comments-container\">\r\n      <div className=\"write-comment-avatar\">\r\n        <ListItemAvatar>\r\n          <Avatar alt=\"Cindy Baker\" src={user1} />\r\n        </ListItemAvatar>\r\n      </div>\r\n      <div className=\"write-comment-text\">\r\n        <input type=\"text\" placeholder=\"Write Something...\"></input>\r\n      </div>\r\n      <div className=\"write-comment-submit-btn\">\r\n        <button>Submit</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport AppHeader from \"./components/header\";\nimport AppTabs from \"./components/tabs\";\nimport Comments from \"./components/comments\";\nimport image1 from \"./images/img1.jpg\";\nimport image2 from \"./images/img2.JPG\";\nimport FormatQuoteIcon from \"@material-ui/icons/FormatQuote\";\nimport \"./App.css\";\nimport WriteComments from \"./components/writeComment\";\nimport constants from \"./utils/constants\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [homePageData, setHomePageData] = useState({});\n  useEffect(() => {\n    axios\n      .post(constants.BASE_URL + constants.GET_HOME_PAGE_DATA)\n      .then((result) => {\n        setHomePageData(result.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  return (\n    <div className=\"App\">\n      <AppHeader></AppHeader>\n      <div style={{ minHeight: \"75px\" }}></div>\n      <AppTabs></AppTabs>\n      <div className=\"banner\">\n        <img src={image1} style={{ height: \"600px\", width: \"100%\" }}></img>\n      </div>\n      <div className=\"paragraph\">{homePageData.para1}</div>\n      <div className=\"split-container\">\n        <div className=\"left-section\">\n          <img src={image1} style={{ width: \"100%\",height:\"100%\" }}></img>\n        </div>\n        <div className=\"right-section text-section\">\n          <div className=\"text-quotes\">\n            <div className=\"double-quotes\">\n              <FormatQuoteIcon fontSize=\"large\" />\n            </div>\n            {homePageData &&\n              homePageData.quotesData &&\n              homePageData.quotesData.body}\n            <div className=\"author-name\">\n              -\n              {homePageData &&\n                homePageData.quotesData &&\n                homePageData.quotesData.author}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"split-container\">\n        <div className=\"left-section text-section\">\n          <div className=\"text-quotes black-color\">\n            <b>\n              {homePageData && homePageData.para2 && homePageData.para2.header}\n            </b>\n            <br/>\n            {homePageData && homePageData.para2 && homePageData.para2.body}\n          </div>\n        </div>\n        <div className=\"right-section\">\n          <img src={image1} style={{ width: \"100%\" , height:\"100%\"}}></img>\n        </div>\n      </div>\n      <div className=\"paragraph\">{homePageData.para3}</div>\n      <div className=\"video\">\n        <img src={image2} style={{ height: \"600px\", width: \"100%\" }}></img>\n      </div>\n      <Comments></Comments>\n      <WriteComments></WriteComments>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}